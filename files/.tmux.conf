set-option -g default-shell /opt/homebrew/bin/fish

# theme
## set status bar
set -g status-style bg="#373b41",fg="#c5c8c6"

## highlight active window
set -g window-status-current-style bg="#282a2e",fg="#81a2be"

##ns highlight activity in status bar
set -g window-status-activity-style bg="#1d1f21",fg="#8abeb7"

## pane border and colors
set -g pane-active-border-style fg="#373b41"
set -g pane-border-style fg="#373b41"
set -g message-style bg="#8abeb7",fg="#000000"
set -g message-command-style bg="#8abeb7",fg="#000000"
set -g mode-style bg="#8abeb7",fg="#000000"

set -g clock-mode-colour "#81a2be"
set -g clock-mode-style 24

set -g status-interval 30
set -g status-right-length 128
set -g status-left-length 50
set-option -g status-position top

set -g terminal-overrides ',xterm-256color:Tc'

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"
bind-key a send-prefix

bind-key S new-session

# Do not let programs rename the tabs
set-option -g allow-rename off
set -sg escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Full screen shortcut
bind-key -n M-Space resize-pane -Z
bind-key T switch -t timelog

set -g base-index 1
setw -g pane-base-index 1

set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

set-option -g set-titles on
set-option -g set-titles-string "#S"

setw -g mode-keys vi
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Status
set -g status-right "#(kblayout) #[fg=#6f6f6f]│#[fg=default] #(wifi -s  -t -g#77d656 -w#d94a4a -m#d7d682) #[fg=#6f6f6f]│#[fg=default] #(battery -pte -g#77d656 -w#d94a4a -m#d7d682) #[fg=#6f6f6f]│#[fg=default] #(date +%%H:%%M) "
